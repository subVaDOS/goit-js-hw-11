{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Імпорт бібліотеки axios для виконання HTTP-запитів\nimport axios from 'axios';\n// Базова адреса API Pixabay\nconst BASE_URL = 'https://pixabay.com/api/';\n// API-ключ для доступу до Pixabay API\nconst API_KEY = '50348782-72c1d2cf6f33e6e33f09bb691';\n// Базова адреса для всіх axios-запитів\naxios.defaults.baseURL = BASE_URL;\n// Заголовки для запитів\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n};\n\nexport async function getImagesByQuery(query) {\n  const response = await axios.get('', { params: { q: query } });\n  return response.data.hits;\n}\n","// Імпортуємо бібліотеку SimpleLightbox для модального перегляду зображень\nimport SimpleLightbox from 'simplelightbox';\n\n// Імпортуємо стилі бібліотеки SimpleLightbox\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Створюємо новий екземпляр lightbox для всіх посилань у галереї\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt', // Підписи зображень беруться з атрибута alt\n  captionDelay: 200, // Затримка 200 мс перед показом підпису\n});\n// Експорт функції створення галереї\nexport function createGallery(images, galleryElem) {\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        type,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item js-gallery-item\">\n  <a class=\"gallery-link js-gallery-link\" href=\"${largeImageURL}\">\n    <div class=\"image-wrapper\">\n      <img\n        class=\"gallery-image js-gallery-image\"\n        src=\"${webformatURL}\"\n        data-source=\"${type}\"\n        alt=\"${tags}\"\n      />\n    </div>\n  \n  <div>\n    <ul class=\"wrapper-box\">\n      <li class=\"list-item\">\n        <p class=\"value-title\">Likes</p>\n        <p class=\"label\" data-likes>${likes}</p>\n      </li>\n      <li class=\"list-item\">\n        <p class=\"value-title\">Views</p>\n        <p class=\"label\" data-views>${views}</p>\n      </li>\n      <li class=\"list-item\">\n        <p class=\"value-title\">Comments</p>\n        <p class=\"label\" data-comments>${comments}</p>\n      </li>\n      <li class=\"list-item\">\n        <p class=\"value-title\">Downloads</p>\n        <p class=\"label\" data-downloads>${downloads}</p>\n      </li>\n    </ul>\n  </div>\n  </a>\n</li>`\n    )\n    .join('');\n\n  // Додаємо HTML до елемента галереї\n  galleryElem.insertAdjacentHTML('beforeend', markup);\n  // Оновлюємо lightbox, щоб підхопив нові елементи\n  lightbox.refresh();\n}\n\n// Експортуємо функцію очищення галереї\nexport function clearGallery(galleryElem) {\n  // Очищаємо вміст елемента галереї\n  galleryElem.innerHTML = '';\n}\n// Експортуємо функцію показу лоадера\nexport function showLoader(loaderElem) {\n  // Видаляємо клас, що приховує лоадер\n  loaderElem.classList.remove('is-hidden');\n}\n// Експортуємо функцію приховування лоадера\nexport function hideLoader(loaderElem) {\n  // Додаємо клас, що приховує лоадер\n  loaderElem.classList.add('is-hidden');\n}\n","// Імпортуємо бібліотеку для показу повідомлень\nimport iziToast from 'izitoast';\n\n// Імпортуємо стилі для iziToast\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Імпортуємо функцію для отримання зображень з Pixabay\nimport { getImagesByQuery } from './js/pixabay-api';\n\n// Імпортуємо допоміжні функції для роботи з галереєю і лоадером\nimport {\n  createGallery, // функція для створення HTML-галереї\n  showLoader, // функція для показу лоадера (завантаження)\n  hideLoader, // функція для приховування лоадера\n  clearGallery, // функція для очищення галереї\n} from './js/render-functions';\n\n// Знаходимо форму в DOM\nconst form = document.querySelector('.form');\n\n// Знаходимо поле вводу (input) за атрибутом name\nconst input = document.querySelector('[name=\"search-text\"]');\n\n// Знаходимо контейнер галереї в DOM\nconst galleryElem = document.querySelector('.gallery');\n\n// Знаходимо елемент лоадера в DOM\nconst loaderElem = document.querySelector('.loader');\n\n// Додаємо обробник події для форми — при відправці викликається onSubmitForm\nform.addEventListener('submit', onSubmitForm);\n\n// Функція-обробник події форми\nfunction onSubmitForm(event) {\n  event.preventDefault(); // Скасовуємо стандартну поведінку форми (перезавантаження сторінки)\n\n  const request = input.value.trim(); // Отримуємо введене значення та обрізаємо пробіли\n\n  clearGallery(galleryElem); // Очищаємо галерею перед новим запитом\n  showLoader(loaderElem); // Показуємо лоадер, поки йде запит\n\n  if (!request) {\n    // Якщо користувач нічого не ввів\n    hideLoader(loaderElem); // Приховуємо лоадер\n    return iziToast.error({\n      // Показуємо повідомлення про помилку\n      title: 'Caution',\n      message: 'Please enter a search query.',\n      position: 'topRight',\n      timeout: 3000,\n    });\n  }\n\n  // Викликаємо функцію для отримання зображень за запитом\n  getImagesByQuery(request)\n    .then(images => {\n      createGallery(images, galleryElem); // Створюємо галерею зі зображень\n    })\n    .catch(error => {\n      // Якщо сталася помилка або нічого не знайдено — виводимо повідомлення\n      iziToast.error({\n        title: 'Caution',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n        timeout: 3000,\n      });\n    })\n    .finally(() => {\n      hideLoader(loaderElem); // Ховаємо лоадер після завершення запиту\n      form.reset(); // Очищаємо форму (скидаємо введене значення)\n    });\n}\n"],"names":["BASE_URL","API_KEY","axios","getImagesByQuery","query","lightbox","SimpleLightbox","createGallery","images","galleryElem","markup","webformatURL","largeImageURL","type","tags","likes","views","comments","downloads","clearGallery","showLoader","loaderElem","hideLoader","form","input","onSubmitForm","event","request","iziToast","error"],"mappings":"owBAGA,MAAMA,EAAW,2BAEXC,EAAU,qCAEhBC,EAAM,SAAS,QAAUF,EAEzBE,EAAM,SAAS,OAAS,CACtB,IAAKD,EACL,WAAY,QACZ,YAAa,aACb,WAAY,EACd,EAEO,eAAeE,EAAiBC,EAAO,CAE5C,OADiB,MAAMF,EAAM,IAAI,GAAI,CAAE,OAAQ,CAAE,EAAGE,CAAK,EAAI,GAC7C,KAAK,IACvB,CCZA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAcC,EAAQC,EAAa,CACjD,MAAMC,EAASF,EACZ,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,kDAC0CN,CAAa;AAAA;AAAA;AAAA;AAAA,eAIhDD,CAAY;AAAA,uBACJE,CAAI;AAAA,eACZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAQmBC,CAAK;AAAA;AAAA;AAAA;AAAA,sCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,yCAIFC,CAAQ;AAAA;AAAA;AAAA;AAAA,0CAIPC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAMnD,EACK,KAAK,EAAE,EAGVT,EAAY,mBAAmB,YAAaC,CAAM,EAElDL,EAAS,QAAS,CACpB,CAGO,SAASc,EAAaV,EAAa,CAExCA,EAAY,UAAY,EAC1B,CAEO,SAASW,EAAWC,EAAY,CAErCA,EAAW,UAAU,OAAO,WAAW,CACzC,CAEO,SAASC,EAAWD,EAAY,CAErCA,EAAW,UAAU,IAAI,WAAW,CACtC,CC/DA,MAAME,EAAO,SAAS,cAAc,OAAO,EAGrCC,EAAQ,SAAS,cAAc,sBAAsB,EAGrDf,EAAc,SAAS,cAAc,UAAU,EAG/CY,EAAa,SAAS,cAAc,SAAS,EAGnDE,EAAK,iBAAiB,SAAUE,CAAY,EAG5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMC,EAAUH,EAAM,MAAM,KAAI,EAKhC,GAHAL,EAAaV,CAAW,EACxBW,EAAWC,CAAU,EAEjB,CAACM,EAEH,OAAAL,EAAWD,CAAU,EACdO,EAAS,MAAM,CAEpB,MAAO,UACP,QAAS,+BACT,SAAU,WACV,QAAS,GACf,CAAK,EAIHzB,EAAiBwB,CAAO,EACrB,KAAKnB,GAAU,CACdD,EAAcC,EAAQC,CAAW,CAClC,CAAA,EACA,MAAMoB,GAAS,CAEdD,EAAS,MAAM,CACb,MAAO,UACP,QACE,2EACF,SAAU,WACV,QAAS,GACjB,CAAO,CACF,CAAA,EACA,QAAQ,IAAM,CACbN,EAAWD,CAAU,EACrBE,EAAK,MAAK,CAChB,CAAK,CACL"}